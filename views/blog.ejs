<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="style/blog.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootswatch/4.5.2/superhero/bootstrap.min.css">
    <script src="https://cdn.socket.io/socket.io-3.0.1.min.js"></script>
    <title>Personnal Page</title>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light fixed-top bg-light">
        <a class="navbar-brand text-uppercase" href="#">This is a personal page of <%= userName %></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarToggler" aria-controls="navbarToggler" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>  
        </button>
        <div class="collapse navbar-collapse" id="navbarToggler">
            <div class="navbar-nav ml-auto">
              <a class="nav-link" href="/messagerie">Messagerie</a>
              <a class="nav-link" href="/api/logout">Logout</a>
            </div>
        </div>
        <form class="d-flex" onsubmit = "return false">
            <input class="form-control me-2" type="text" id = "item" name = "Search" placeholder= "Search User" aria-label= "Search">
            <button data-ripple type= "button" onclick= "onSearch(this);"> Search </button>
        </form>
    </nav>

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12 col-md-3 col-lg-3">
           <div class="card">
                <div class="card-body">
                    <h5 class="card-title text-uppercase">I'm <%= userName %></h5>
                    <h6 class="card-subtitle mb-2 text-muted">My adress mail : <%= userEmail %></h6>
                    <p class="card-text">Something about you, your interested, gender</p>
                </div>
            </div>
        </div>
    <div class="d-flex flex-column  mb-3 col-sm-12 col-md-6 col-lg-6">
        <div class="p-2">
            <div class="form-group">
                <label for="colFormLabel" class="col-sm-2 col-form-label">What's new?</label>
                <input type="text" name= "item" textarea= "Express yourself" id= "post"/>
                <button class="btn btn-dark" name= "submit" type="button" onclick = "sendAndCreatePost()"> Send </button>
            </div>
        </div>
        <div class="p-2" id='posts'>
        <!-- <ul>
            <% for (var i=0; i<posts.length; i++){ %>
                <textarea><%= posts[i].posts %></textarea>
                 <button type = "button" id= "score">0</button><button id="buttonLike">Like</button>
                     <% } %>
         </ul> -->
        </div>
    </div>

    <div class="col-sm-12 col-md-3 col-lg-3"> 
        <div id="your-chat">
            <div id="chat-window">
                <div id="output"></div>
            </div>
            <div class="bg-info">
                <input id="handle" type="text" placeholder="Name"/>
            </div>
            <div>
                <input  id="message" type="text" placeholder="message"/>
            </div>
            <button id="send">Send</button>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV" crossorigin="anonymous"></script>
<script>

function CreatePosts(posts){
    console.log('creating posts', posts)
    if (posts.posts === undefined){
        return
    }
    const postsDiv = document.getElementById('posts')
        for(let i = 0; i < posts.posts.length; ++i ){
            const divParent = document.createElement('div')
            divParent.id = posts.posts[i].id + 'parent'
            const section = document.createElement("section")
            section.className = "postUser"
            const spanText = document.createElement("span")
            let contentText = document.createTextNode(posts.posts[i].item);
            spanText.className = "textPost"
            const spanBtn = document.createElement("span")
            spanBtn.className="spanBtn"
            let btnText = document.createTextNode("delete")
            spanText.appendChild(contentText); 
            spanBtn.appendChild(btnText)
            section.appendChild(spanText)
            section.appendChild(spanBtn);
            postsDiv.appendChild(section);
            spanBtn.addEventListener('click', ()=>{deletePostUser()})
        
        ///************Making comment place********//////////
            const div = document.createElement("div")
            div.className = "divComment"
            const divInput = document.createElement("input")
            divInput.className= "myComment";
            divInput.id = posts.posts[i].id
            divInput.setAttribute("name", "item"); 
            //const divInputText = document.createTextNode("write your comment")
            divInput.value = "write your comment and you name "
            const sendComment = document.createElement("button");
            sendComment.className = "commentButton";
            const textButton = document.createTextNode("send");
            //const deleteButton = document.createElement("button");
            //deleteButton.className = "deleteButton";
            //const delButton = document.createTextNode("delete");
            sendComment.appendChild(textButton);
            //deleteButton.appendChild(delButton);
            //divInput.appendChild(divInputText);
            div.appendChild(divInput);
            div.appendChild(sendComment);
            //div.appendChild(deleteButton);
            
            divParent.appendChild(div)
            postsDiv.appendChild(divParent)
            const postId = posts.posts[i].id
            sendComment.addEventListener('click', ()=>{sendAndCreateComment(postId)}); 
            //deleteButton.addEventListener('click', ()=>{deletingComment(postId)}); 
        }
    }
    

function CreateComments(commentsResponse){
        console.log('CreateComments', commentsResponse)
        if (commentsResponse.comments === undefined){
            retur
        }
        function createSingleComment(comment){
            const parentDiv = document.getElementById(commentsResponse.postId+'parent')
            console.log(comment.postId+'parent')
            console.log(parentDiv)
            const div = document.createElement("div")
            div.className = "commentWritten"
            let content = document.createTextNode(comment.item);
            div.appendChild(content)
            parentDiv.appendChild(div)
            console.log('created div')
        }
        let comments = commentsResponse.comments
        console.log()
        for (let i = 0; i< comments.length; ++i){
            const comment = comments[i]
            createSingleComment(comment)
        }
}   
//////****************************************Delete post user ********************************************************/////////
function deletePostUser(){
    console.log("object id "+ id)
}
///********************************************getting post **********************************************************//////
async function getPosts(){ 
    const options = {
        method: 'GET',
    };
    const res = await fetch('http://localhost:5000/api/blog', options)
    const json = await res.json()
    return json
}
    const posts = getPosts().then(posts =>{
        console.log(posts)
        if (posts === []){
            posts = {posts: posts}
        }
        CreatePosts(posts)
        getCommentsFromAllPosts(posts)
});


///*************************************Send and Create comments *************************************************************////
 async function sendAndCreateComment(postId){  
     const res = await sendComment(postId)
     let comment = document.getElementById(postId).value
     CreateComments({postId: postId, comments: [{item:comment}]})
 }

////******************************************Send and create post ***************************************************************************////
async function sendAndCreatePost(){ 
    console.log('sendandCreatePost')
    let post = document.getElementById('post').value
    try {
        const res = await sendPost()
    }
    catch (exception){
        console.error(exception)
    }
    CreatePosts({posts: [{item:post}]})
    document.getElementById('post').value = ''
}
//***************get comments from all posts **************///
async function getCommentsFromAllPosts(posts){
    if (posts.posts === undefined){
        return
    }
    const promises = []
    for(let i = 0; i < posts.posts.length; ++i){
        promises.push(getComment(posts.posts[i].id))
    }
    const res = await Promise.all(promises)
    for (let i = 0 ; i < res.length; ++i){
        const text = await res[i].text()
        console.log('TEXT', text)
        const comments = JSON.parse(text)
        if (comments === {}){
            continue
        }
        CreateComments(comments)
    }
}

////********************************************deleting posts*********************************************************////////////   
function onSearch(button){
window.location.href = "/search/" + button.previousElementSibling.value; 
}

</script>
<script src="/client/client.js"></script>

</body>
</html>